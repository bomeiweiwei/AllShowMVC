@model VW_Employee

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmCall" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>編輯員工</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmpNo)

        <div class="form-group">
            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.EmpAccount)
            @*@Html.LabelFor(model => model.EmpAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpAccount, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="ChangePwd" name="ChangePwd" value="true" 
                           @{
                               if (Model.ChangePwd.HasValue && Model.ChangePwd.Value)
                               {
                                   @:checked
                               }
                           }/>
                    <label for="ChangePwd" class="custom-control-label">修改密碼</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpPwd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password("EmpPwd", "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmpPwd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(m => m.EmpEmail)
            @*@Html.LabelFor(model => model.EmpEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpEmail, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpSex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="EmpSex" value="0" id="EmpSex1">
                    <label class="form-check-label" for="EmpSex1">
                        女
                    </label>
                </div>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="EmpSex" value="1" id="EmpSex2" checked>
                    <label class="form-check-label" for="EmpSex2">
                        男
                    </label>
                </div>
                @*@Html.EditorFor(model => model.EmpSex, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EmpSex, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("EmpBirth", "DateTimeTemp", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.EmpBirth, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.EmpBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpTel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpTel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpTel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("HireDate", "DateTimeTemp", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LeaveDate, new { type = "date" })
                @*@Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpAccountState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="EmpAccountState" name="EmpAccountState" value="1" 
                           @{
                               if (Model.EmpAccountState == "1")
                               {
                                   @:checked
                               }
                           }/>
                    <label for="EmpAccountState" class="custom-control-label">啟用</label>
                </div>
                @*@Html.EditorFor(model => model.EmpAccountState, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.EmpAccountState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="編輯員工" class="btn btn-warning" id="btn_Submit"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回到列表", "Index", "Employees", null, new { Area = "Admin", @class = "btn btn-info" })
</div>
<script>
    var url = '@Url.Action("Index", "Employees", new { Area = "Admin" })';
    var apiUrl = '@Url.HttpRouteUrl("DefaultApi", new { controller= "Employees" })/';
</script>
<script src="~/scripts/Admin/Employees/Edit.js"></script>

